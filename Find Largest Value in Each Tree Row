class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        // Naive solution can be level order traversal for each level
        // Then sort the levels and store in the ans array
        vector<int> ans;
        if(root == nullptr) return ans;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            int maxInRow = INT_MIN;
            int size = q.size();
            for(int i = 0 ; i < size ; i++){
                auto node = q.front();
                q.pop();
                maxInRow = max(maxInRow, node->val);
                // Now push left then right
                if(node->left) q.push(node->left);
                if(node->right) q.push(node->right);
            }
            // Now maxInRow has larget value in the row
            ans.push_back(maxInRow);
        }
        return ans;
    }
};
