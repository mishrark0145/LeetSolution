class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if( root == nullptr) return ans;
        queue<TreeNode*> q;
        q.push(root);
        bool flag = 0;
        //flag zero means it is left to right
        //flag one means right to left
        while( !q.empty()){
            int size = q.size();
            vector<int> level;
            for( int i = 0 ; i < size ; i++){
                TreeNode* node = q.front();
                q.pop();
                if( node -> left != nullptr) q.push( node -> left);
                if( node -> right != nullptr) q.push( node -> right);
                level.push_back( node -> val);
            }
            if(flag){
                //right to left so we will first reverse the level then push it in the ans
                reverse(level.begin() , level.end());
            }
            ans.push_back(level);
            //after doing each iteration change the flag
            flag = !flag;
        }
        return ans;
    }
};
