/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        if( head -> next == nullptr) return head;
        ListNode* right_ptr = head , *left_ptr = head;
        while( k > 1){
            right_ptr = right_ptr -> next;
            k--;
        }
        ListNode* end_ptr = right_ptr;//this is the kth node form beeggining
        while( right_ptr -> next){
            right_ptr = right_ptr -> next;
            left_ptr = left_ptr -> next;
        } 
        //and here now the left pointer is the kth node form the end
        swap( end_ptr -> val , left_ptr -> val );
        return head;
    }
};
