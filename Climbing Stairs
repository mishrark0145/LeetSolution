class Solution {
public:
    int climbStairs(int n) {
        if( n <= 1) return n;
        vector<int> dp( n + 1 , -1);
        dp[1] = 1;
        dp[0] = 1;
        rec( n , dp);
        return dp[n];  
    }

    int rec( int n , vector<int>& dp){
        if( n <= 1) return 1;
        if( dp[n] != -1) return dp[n];
        int left = rec( n - 1 , dp);
        int right = rec( n - 2 , dp);
        dp[n] = left + right;
        return dp[n];
    }
};


//tabulation method ( Bottom-Up approach)
/*
int climbStairs(int n) {
        if( n == 1) return 1;
        int prev1= 1;
        int prev2 = 1;
        for( int i = 2 ; i < n + 1 ; i++){
            int curr = prev1 + prev2;
            prev2 = prev1;
            prev1 = curr; 
        }
        return prev1;
    }
*/
