/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if( head == nullptr || head -> next == nullptr) return false;
        unordered_map<ListNode*,int> node;
        node[head]++;
        head = head -> next;
        while( head != nullptr && node.find(head) == node.end()){
            node[head]++;
            head = head -> next;
        }
        if( head == nullptr) return false;
        else
        return true;
    }
};
