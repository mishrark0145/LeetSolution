/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if( head == nullptr || head -> next == nullptr){
            return head;
        }
        ListNode* dummy = nullptr;
        ListNode* curr = head -> next;
        ListNode* prev = head;
        ListNode* zoro = head;
        head = curr;
        while(zoro != nullptr && zoro -> next != nullptr){
            ListNode* temp = curr -> next;
            zoro = temp;
            curr -> next = prev;
            prev -> next = temp;
            if( dummy != nullptr ){
                dummy -> next = curr;
            } 
            dummy = prev;
            if( temp != nullptr && temp -> next != nullptr){
                curr = temp -> next;
                prev = temp;
            } 
        }
        return head;
    }
};
