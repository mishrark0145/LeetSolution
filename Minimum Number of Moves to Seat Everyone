//Can we sort the arrays to help solve the problem?
//Can we greedily match each student to a seat?
//The smallest positioned student will go to the smallest positioned chair,
// and then the next smallest positioned student will go to the
// next smallest positioned chair, and so on.
class Solution {
public:
    int minMovesToSeat(vector<int>& seats, vector<int>& students) {
        //sort both the seats and students
        sort( seats.begin() , seats.end());
        sort( students.begin() , students.end());
        int n = seats.size();
        int moves = 0;
        for( int i = 0 ; i < n ; i++){
            moves = moves + abs( seats[i] - students[i]);
        }
        return moves;
    }
};
