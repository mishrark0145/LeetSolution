//Recursive (TLE)

class Solution {
public:
    int minimumDifference(vector<int>& nums) {
        int n = nums.size();
        int target = 0;
        for( int i = 0 ; i < n ; i++){
            target += nums[i];
        }
        return rec( n - 1 , n/2 - 1 , target , nums);
    }

    int rec( int ind , int sub_ind , int target , vector<int>& nums){
        if( ind == -1){
            return abs(target);
        }
        int take = 1e9;
        if( sub_ind >= 0) 
            take = rec( ind - 1 , sub_ind - 1 , target - 2*nums[ind] , nums);
        int not_take = 1e9;
        if( ind - sub_ind - 1 >= 0)    
            not_take = rec( ind - 1 , sub_ind , target , nums);
        return min( take , not_take);    
    }
};
