class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        //for returning ans
        vector<int> ans;

        int n = nums2.size();
        //we are creating the map so that we can store the nxt greater element of nums2 array
        //so that when we have find it using stacks method and stored the nxt greater element 
        //corresponding to the arrays vlaue;
        unordered_map<int,int> nxt;
        stack<int> s;
        for( int i = n - 1 ; i >= 0 ; i--){
            while( !s.empty() && s.top() <= nums2[i]){
                s.pop();
            }
            if( s.empty()){
                nxt[nums2[i]] = -1;
            }
            else{
                nxt[nums2[i]] = s.top();
            }
            s.push(nums2[i]);
        }
        // now here we will find out that for each element in nums1 have what value of nxt 
        //greater element in nums2 using the map we used above 
        for( int i = 0 ; i < nums1.size() ; i++){
            auto it = nxt.find(nums1[i]);
            ans.push_back(it -> second);
        }
        return ans;
    }
};
