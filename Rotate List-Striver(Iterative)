/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if( head == NULL || head->next == NULL || k==0){
            return head;
        }
        ListNode* curr = head;
        int size = 1;
        while( curr->next != NULL){
            curr = curr->next;
            size++;
        }
        if(k % size ==0) return head;

        k = k % size;

        k = size - k;

        curr = head;
        while( curr->next != NULL){
            curr = curr->next;
        }
        //making the last node point to the first node
        curr->next = head;

        size =1;

        while(true){
            if(size == k){
                curr = head->next;
                head->next = NULL;
                head = curr;
                break;
            }  
            head = head->next;
            size++;
            
        }

        return head;
    }
};
