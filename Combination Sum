class Solution {
public:

    int sumof( vector<int>& temp){
        int sum = 0;
        for( int i = 0 ; i < temp.size() ; i++){
            sum += temp[i];
        }
        return sum;
    }

    void findCombinationSum(vector<int>& candidates, int target, int initial , vector<vector<int>>& ans , vector<int>& temp ){
        
        if( initial >= candidates.size()) return ;

        if(sumof(temp) == target) {
            ans.push_back(temp);
            return;
        }

        if( sumof(temp) > target) return;

        temp.push_back(candidates[initial]);
        findCombinationSum(candidates , target , initial, ans , temp);
        temp.pop_back();
        findCombinationSum(candidates , target , initial + 1 , ans , temp);
    }


    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> temp;
        sort( candidates.begin() , candidates.end());
        findCombinationSum(candidates , target , 0, ans , temp);
        return ans;
    }
};
